{"version":3,"sources":["components/ContactList/ContactList.module.scss","components/Filter/Filter.module.scss","components/Container/Container.module.scss","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Container/Container.jsx","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.scss"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","fetchContacts","dispatch","get","then","data","catch","error","massage","addContact","name","number","contact","post","deleteContact","contactId","delete","getContacts","state","contacts","items","getFilter","filter","getContactsToShow","createSelector","normalizedFilter","toLowerCase","includes","getAdded","map","ContactForm","useState","contactName","setContactName","contactNumber","setContactNumber","useSelector","useDispatch","reset","className","styles","onSubmit","event","preventDefault","checkSameName","find","checkSameNumber","alert","contactsOperations","formLabel","formText","formInput","type","placeholder","value","onChange","currentTarget","autoComplete","pattern","title","required","defaultCountry","international","formBtn","ContactItem","id","phoneNumber","href","contactBtn","onClick","ContactList","allContacts","contactsSelectors","length","notification","Filter","filterLabel","filterText","filterInput","e","contactsActions","Container","children","App","titleContacts","itemsReducer","createReducer","_","payload","filterReducer","loading","contactsReducer","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dca29701.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__3AHxY\",\"ContactItem\":\"ContactList_ContactItem__20l8P\",\"contactBtn\":\"ContactList_contactBtn__1VU2p\",\"phoneNumber\":\"ContactList_phoneNumber__kBnGP\",\"notification\":\"ContactList_notification__2OlRd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__Gk3Sd\",\"filterText\":\"Filter_filterText__1bhQq\",\"filterInput\":\"Filter_filterInput__F4fvY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1yed9\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const fetchContactsRequest = createAction(\n  \"contacts/fetchContactRequest\"\n);\nexport const fetchContactsSuccess = createAction(\n  \"contacts/fetchContactSuccess\"\n);\nexport const fetchContactsError = createAction(\"contacts/fetchContactError\");\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\nexport const addContactError = createAction(\"contacts/addContactError\");\nexport const deleteContactRequest = createAction(\n  \"contacts/deleteContactRequest\"\n);\nexport const deleteContactSuccess = createAction(\n  \"contacts/deleteContactSuccess\"\n);\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n","import axios from \"axios\";\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from \"./contacts-actions\";\n\naxios.defaults.baseURL = \"http://localhost:3000\";\n\nexport const fetchContacts = () => (dispatch) => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get(\"/contacts\")\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch((error) => dispatch(fetchContactsError(error.massage)));\n};\n\nexport const addContact =\n  ({ name, number }) =>\n  (dispatch) => {\n    const contact = { name, number };\n    dispatch(addContactRequest());\n\n    axios\n      .post(\"/contacts\", contact)\n      .then(({ data }) => dispatch(addContactSuccess(data)))\n      .catch((error) => dispatch(addContactError(error.massage)));\n  };\n\nexport const deleteContact = (contactId) => (dispatch) => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch((error) => dispatch(deleteContactError(error.massage)));\n};\n//   dispatch(fetchContactsRequest());\n// const fetchContacts = () => async dispatch => {\n\n//   try {\n//     const { data } = await axios.get('/contacts');\n//     dispatch(fetchContactsSuccess(data));\n\n//     return data;\n//   } catch (error) {\n//     dispatch(fetchContactsError(error.message));\n//   }\n// };\n\n// const addContact = (name, number) => async dispatch => {\n//   const contact = { name, number };\n//   dispatch(addContactRequest());\n\n//   try {\n//     const { data } = await axios.post('/contacts', contact);\n//     dispatch(addContactSuccess(data));\n\n//     return data;\n//   } catch (error) {\n//     dispatch(addContactError(error.message));\n//   }\n// };\n\n// const deleteContact = contactId => async dispatch => {\n//   dispatch(deleteContactRequest());\n\n//   try {\n//     const { data } = await axios.delete(`/contacts/${contactId}`);\n//     dispatch(deleteContactSuccess(contactId));\n\n//     return data;\n//   } catch (error) {\n//     dispatch(deleteContactError(error.message));\n//   }\n// };\n\n// /* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\n// export default {\n//   fetchContacts,\n//   addContact,\n//   deleteContact,\n// };\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const getContactsToShow = createSelector(\n  [getContacts, getFilter],\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return items.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\nexport const getAdded = createSelector([getContacts], (contacts) => {\n  const Added = (name) => contacts.map(({ name }) => name).includes(name);\n  return Added;\n});\n","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport PhoneInput from \"react-phone-number-input\";\n\nimport { contactsOperations } from \"redux/contacts\";\nimport { getContacts } from \"redux/contacts\";\nimport styles from \"./ContactForm.module.scss\";\nimport \"react-phone-number-input/style.css\";\n\nconst ContactForm = () => {\n  const [contactName, setContactName] = useState(\"\");\n  const [contactNumber, setContactNumber] = useState(\"\");\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n    if (name === \"name\") {\n      setContactName(value);\n    }\n  };\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    const checkSameName = contacts.find(({ name }) => name === contactName);\n\n    const checkSameNumber = contacts.find(\n      ({ number }) => number === contactNumber\n    );\n\n    if (checkSameNumber) {\n      const { name, number } = checkSameNumber;\n      alert(`This number already exists: ${name}: ${number}`);\n      return;\n    }\n\n    if (checkSameName) {\n      alert(`${contactName} is already in contacts`);\n      return;\n    }\n\n    dispatch(contactsOperations.addContact(contactName, contactNumber));\n    reset();\n  };\n\n  const reset = () => {\n    setContactName(\"\");\n    setContactNumber(\"\");\n  };\n\n  return (\n    <form className={styles.ContactForm} onSubmit={handleFormSubmit}>\n      <label className={styles.formLabel}>\n        <span className={styles.formText}>Name</span>\n        <input\n          className={styles.formInput}\n          type=\"text\"\n          placeholder=\"Enter contact's name\"\n          name=\"name\"\n          value={contactName}\n          onChange={handleChange}\n          autoComplete=\"off\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={styles.formLabel}>\n        <span className={styles.formText}>Number</span>\n        <PhoneInput\n          value={contactNumber}\n          onChange={setContactNumber}\n          defaultCountry=\"UA\"\n          international\n          autoComplete=\"off\"\n          pattern=\"((\\s*)?(\\+)?([- _():=+]?\\d[- _():=+]?){10,14}(\\s*)?)\"\n          title=\"Номер телефона должен состоять из 10-14 цифр, может содержать цифры и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <button className={styles.formBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { contactsOperations } from \"redux/contacts\";\r\n\r\nimport styles from \"./ContactList.module.scss\";\r\n\r\nconst ContactItem = ({ contact }) => {\r\n  const { id, name, number } = contact;\r\n\r\n  const dispatch = useDispatch();\r\n  const onDeleteContact = () => dispatch(contactsOperations.deleteContact(id));\r\n\r\n  return (\r\n    <li className={styles.ContactItem}>\r\n      <span>\r\n        {name}:\r\n        <a\r\n          className={styles.phoneNumber}\r\n          href={\"tel:\" + number}\r\n          aria-label=\"Call\"\r\n        >\r\n          {number}\r\n        </a>\r\n      </span>\r\n      <button className={styles.contactBtn} onClick={onDeleteContact}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import { useSelector } from \"react-redux\";\nimport { contactsSelectors } from \"redux/contacts\";\nimport ContactItem from \"./ContactItem\";\nimport styles from \"./ContactList.module.scss\";\n\nconst ContactList = () => {\n  const allContacts = useSelector(contactsSelectors.getContacts);\n  const contacts = useSelector(contactsSelectors.getContactsToShow);\n\n  return allContacts.length === 0 ? (\n    <p className={styles.notification}>Contact book is empty</p>\n  ) : (\n    <ul className={styles.ContactList}>\n      {contacts.map((contact) => {\n        const { id } = contact;\n\n        return <ContactItem key={id} contact={contact} />;\n      })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { getFilter } from \"redux/contacts\";\nimport * as contactsActions from \"../../redux/contacts/contacts-actions\";\nimport styles from \"./Filter.module.scss\";\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n  const onChangeFilter = (e) =>\n    dispatch(contactsActions.changeFilter(e.currentTarget.value));\n\n  return (\n    <label className={styles.filterLabel}>\n      <span className={styles.filterText}>Find contacts by name</span>\n      <input\n        className={styles.filterInput}\n        type=\"text\"\n        placeholder=\"Enter contact's name\"\n        value={filter}\n        onChange={onChangeFilter}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import styles from \"./Container.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.Container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;","import styles from \"./App.scss\";\r\nimport ContactForm from \"./components/ContactForm/ContactForm\";\r\nimport ContactList from \"./components/ContactList/ContactList\";\r\nimport Filter from \"./components/Filter/Filter\";\r\nimport Container from \"./components/Container/Container\";\r\n\r\nconst App = () => (\r\n  <div className={styles.App}>\r\n    <Container>\r\n      <h1 className={styles.title}>Phonebook (hook)</h1>\r\n      <ContactForm />\r\n\r\n      <h2 className={styles.titleContacts}>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </Container>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from \"./contacts-actions\";\n\nconst itemsReducer = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filterReducer = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n  loading,\n});\nexport default contactsReducer;\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./contacts/contacts-reducer\";\nimport logger from \"redux-logger\";\n\nconst middleware = [...getDefaultMiddleware(), logger];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__PVezi\",\"formInput\":\"ContactForm_formInput__2N1tc\",\"formBtn\":\"ContactForm_formBtn__3RIhc\",\"formLabel\":\"ContactForm_formLabel__2_0Rq\",\"formText\":\"ContactForm_formText__394pU\"};"],"sourceRoot":""}