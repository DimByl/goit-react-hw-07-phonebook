{"version":3,"sources":["components/ContactList/ContactList.module.scss","components/Filter/Filter.module.scss","components/Notification/Notification.module.scss","components/Container/Container.module.scss","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","components/Notification/Notification.jsx","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Container/Container.jsx","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.scss"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","fetchContacts","dispatch","get","then","data","catch","error","addContact","name","number","contact","deleteContact","contactId","delete","getContacts","state","contacts","items","getFilter","filter","getContactsToShow","createSelector","normalizedFilter","toLowerCase","includes","map","ContactForm","useState","contactName","setContactName","contactNumber","setContactNumber","useSelector","useDispatch","reset","className","styles","onSubmit","event","preventDefault","checkSameName","find","checkSameNumber","alert","contactsOperations","formLabel","formText","formInput","type","placeholder","value","onChange","currentTarget","autoComplete","pattern","title","required","defaultCountry","international","formBtn","Notification","message","classNameType","notice","defaultProps","ContactItem","id","phoneNumber","href","contactBtn","onClick","ContactList","allContacts","length","Filter","filterLabel","filterText","filterInput","e","contactsActions","Container","children","App","titleContacts","itemsReducer","createReducer","_","payload","filterReducer","loading","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf7366af.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__3AHxY\",\"ContactItem\":\"ContactList_ContactItem__20l8P\",\"contactBtn\":\"ContactList_contactBtn__1VU2p\",\"phoneNumber\":\"ContactList_phoneNumber__kBnGP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__Gk3Sd\",\"filterText\":\"Filter_filterText__1bhQq\",\"filterInput\":\"Filter_filterInput__F4fvY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notification\":\"Notification_Notification__1r2sh\",\"notice\":\"Notification_notice__I6zbx\",\"error\":\"Notification_error__8l5mL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1yed9\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const fetchContactsRequest = createAction(\n  \"contacts/fetchContactsRequest\"\n);\nexport const fetchContactsSuccess = createAction(\n  \"contacts/fetchContactsSuccess\"\n);\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\nexport const addContactError = createAction(\"contacts/addContactError\");\nexport const deleteContactRequest = createAction(\n  \"contacts/deleteContactRequest\"\n);\nexport const deleteContactSuccess = createAction(\n  \"contacts/deleteContactSuccess\"\n);\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n","import axios from \"axios\";\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from \"./contacts-actions\";\n\naxios.defaults.baseURL = \"http://localhost:3000\";\n\n// const fetchContacts = () => async dispatch => {\n//   dispatch(fetchContactsRequest());\n\n//   try {\n//     const { data } = await axios.get('/contacts');\n//     dispatch(fetchContactsSuccess(data));\n\n//     return data;\n//   } catch (error) {\n//     dispatch(fetchContactsError(error.message));\n//   }\n// };\n\n// const addContact = (name, number) => async dispatch => {\n//   const contact = { name, number };\n//   dispatch(addContactRequest());\n\n//   try {\n//     const { data } = await axios.post('/contacts', contact);\n//     dispatch(addContactSuccess(data));\n\n//     return data;\n//   } catch (error) {\n//     dispatch(addContactError(error.message));\n//   }\n// };\n\n// const deleteContact = contactId => async dispatch => {\n//   dispatch(deleteContactRequest());\n\n//   try {\n//     const { data } = await axios.delete(`/contacts/${contactId}`);\n//     dispatch(deleteContactSuccess(contactId));\n\n//     return data;\n//   } catch (error) {\n//     dispatch(deleteContactError(error.message));\n//   }\n// };\n\n// /* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\n// export default {\n//   fetchContacts,\n//   addContact,\n//   deleteContact,\n// };\nexport const fetchContacts = () => (dispatch) => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get(\"/contacts\")\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch((error) => dispatch(fetchContactsError(error)));\n};\n\nexport const addContact = (name, number) => (dispatch) => {\n  const contact = { name, number };\n  dispatch(addContactRequest());\n\n  axios\n    .get(\"/contacts\", contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch((error) => dispatch(addContactError(error)));\n};\n\nexport const deleteContact = (contactId) => (dispatch) => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch((error) => dispatch(deleteContactError(error)));\n};\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\nexport const getLoadingContacts = (state) => state.contacts.loading;\nexport const getError = (state) => state.contacts.error;\n\nexport const getContactsToShow = createSelector(\n  [getContacts, getFilter],\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return items.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\nexport const getAdded = createSelector([getContacts], (contacts) => {\n  const Added = (name) => contacts.map(({ name }) => name).includes(name);\n  return Added;\n});\n","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport PhoneInput from \"react-phone-number-input\";\n\nimport { contactsOperations } from \"redux/contacts\";\nimport { getContacts } from \"redux/contacts\";\nimport styles from \"./ContactForm.module.scss\";\nimport \"react-phone-number-input/style.css\";\n\nconst ContactForm = () => {\n  const [contactName, setContactName] = useState(\"\");\n  const [contactNumber, setContactNumber] = useState(\"\");\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n    if (name === \"name\") {\n      setContactName(value);\n    }\n  };\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    const checkSameName = contacts.find(({ name }) => name === contactName);\n\n    const checkSameNumber = contacts.find(\n      ({ number }) => number === contactNumber\n    );\n\n    if (checkSameNumber) {\n      const { name, number } = checkSameNumber;\n      alert(`This number already exists: \"${name}: ${number}\"`);\n      return;\n    }\n\n    if (checkSameName) {\n      alert(`${contactName} is already in contacts`);\n      return;\n    }\n\n    dispatch(contactsOperations.addContact(contactName, contactNumber));\n    reset();\n  };\n\n  const reset = () => {\n    setContactName(\"\");\n    setContactNumber(\"\");\n  };\n\n  return (\n    <form className={styles.ContactForm} onSubmit={handleFormSubmit}>\n      <label className={styles.formLabel}>\n        <span className={styles.formText}>Name</span>\n        <input\n          className={styles.formInput}\n          type=\"text\"\n          placeholder=\"Enter contact's name\"\n          name=\"name\"\n          value={contactName}\n          onChange={handleChange}\n          autoComplete=\"off\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={styles.formLabel}>\n        <span className={styles.formText}>Number</span>\n        <PhoneInput\n          value={contactNumber}\n          onChange={setContactNumber}\n          defaultCountry=\"UA\"\n          international\n          autoComplete=\"off\"\n          pattern=\"((\\s*)?(\\+)?([- _():=+]?\\d[- _():=+]?){10,14}(\\s*)?)\"\n          title=\"Номер телефона должен состоять из 10-14 цифр, может содержать цифры и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <button className={styles.formBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\nimport styles from \"./Notification.module.scss\";\n\nconst Notification = ({ message, type }) => {\n  const classNameType = type === \"error\" ? styles.error : styles.notice;\n\n  return <p className={classNameType}>{message}</p>;\n};\n\nNotification.defaultProps = {\n  type: \"notice\",\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n  type: PropTypes.string,\n};\n\nexport default Notification;\n","import PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { contactsOperations } from \"redux/contacts\";\n\nimport styles from \"./ContactList.module.scss\";\n\nconst ContactItem = ({ contact }) => {\n  const { id, name, number } = contact;\n\n  const dispatch = useDispatch();\n  const onDeleteContact = () => dispatch(contactsOperations.deleteContact(id));\n\n  return (\n    <li className={styles.ContactItem}>\n      <span>\n        {name}:\n        <a\n          className={styles.phoneNumber}\n          href={\"tel:\" + number}\n          aria-label=\"Call\"\n        >\n          {number}\n        </a>\n      </span>\n      <button className={styles.contactBtn} onClick={onDeleteContact}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ContactItem;\n","import { useSelector } from \"react-redux\";\nimport {\n  getContacts,\n  getContactsToShow,\n} from \"redux/contacts/contacts-selectors\";\nimport Notification from \"components/Notification/Notification\";\nimport ContactItem from \"./ContactItem\";\nimport styles from \"./ContactList.module.scss\";\n\nconst ContactList = () => {\n  const allContacts = useSelector(getContacts);\n  const contacts = useSelector(getContactsToShow);\n\n  return allContacts.length === 0 ? (\n    <ul className={styles.ContactList}>\n      {contacts.map((contact) => {\n        const { id } = contact;\n\n        return <ContactItem key={id} contact={contact} />;\n      })}\n    </ul>\n  ) : (\n    <Notification message=\"Contact book is empty\" />\n  );\n};\n\nexport default ContactList;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { getFilter } from \"../../redux/contacts/contacts-selectors\";\nimport * as contactsActions from \"../../redux/contacts/contacts-actions\";\nimport styles from \"./Filter.module.scss\";\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n  const onChangeFilter = (e) =>\n    dispatch(contactsActions.changeFilter(e.currentTarget.value));\n\n  return (\n    <label className={styles.filterLabel}>\n      <span className={styles.filterText}>Find contacts by name</span>\n      <input\n        className={styles.filterInput}\n        type=\"text\"\n        placeholder=\"Enter contact's name\"\n        value={filter}\n        onChange={onChangeFilter}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import styles from \"./Container.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.Container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;","import styles from \"./App.scss\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport Container from \"./components/Container/Container\";\n\nconst App = () => (\n  <div className={styles.App}>\n    <Container>\n      <h1 className={styles.title}>Phonebook (hook)</h1>\n      <ContactForm />\n\n      <h2 className={styles.titleContacts}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  </div>\n);\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from \"./contacts-actions\";\n\nconst itemsReducer = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filterReducer = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsError]: (_, { payload }) => payload,\n  [fetchContactsRequest]: () => null,\n  [addContactError]: (_, { payload }) => payload,\n  [addContactRequest]: () => null,\n  [deleteContactError]: (_, { payload }) => payload,\n  [deleteContactRequest]: () => null,\n});\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./contacts/contacts-reducer\";\nimport logger from \"redux-logger\";\n\nconst middleware = [...getDefaultMiddleware(), logger];\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\n\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__PVezi\",\"formInput\":\"ContactForm_formInput__2N1tc\",\"formBtn\":\"ContactForm_formBtn__3RIhc\",\"formLabel\":\"ContactForm_formLabel__2_0Rq\",\"formText\":\"ContactForm_formText__394pU\"};"],"sourceRoot":""}