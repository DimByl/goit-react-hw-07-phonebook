{"version":3,"sources":["components/ContactList/ContactList.module.scss","components/Filter/Filter.module.scss","components/Notification/Notification.module.scss","components/Container/Container.module.scss","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","components/Notification/Notification.jsx","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Container/Container.jsx","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.scss"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","fetchContacts","dispatch","get","then","data","catch","error","addContact","name","number","contact","deleteContact","contactId","delete","getContacts","state","contacts","items","getFilter","filter","getContactsToShow","createSelector","normalizedFilter","toLowerCase","includes","ContactForm","useState","contactName","setContactName","contactNumber","setContactNumber","useSelector","useDispatch","reset","className","styles","onSubmit","event","preventDefault","checkSameName","find","checkSameNumber","alert","contactsOperations","formLabel","formText","formInput","type","placeholder","value","onChange","currentTarget","autoComplete","pattern","title","required","defaultCountry","international","formBtn","Notification","message","classNameType","notice","defaultProps","ContactItem","id","phoneNumber","href","contactBtn","onClick","ContactList","allContacts","length","map","Filter","filterLabel","filterText","filterInput","e","contactsActions","Container","children","App","titleContacts","itemsReducer","createReducer","_","payload","filterReducer","loading","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b552a66.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__3AHxY\",\"ContactItem\":\"ContactList_ContactItem__20l8P\",\"contactBtn\":\"ContactList_contactBtn__1VU2p\",\"phoneNumber\":\"ContactList_phoneNumber__kBnGP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__Gk3Sd\",\"filterText\":\"Filter_filterText__1bhQq\",\"filterInput\":\"Filter_filterInput__F4fvY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notification\":\"Notification_Notification__1r2sh\",\"notice\":\"Notification_notice__I6zbx\",\"error\":\"Notification_error__8l5mL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1yed9\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n","import axios from 'axios';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:6060';\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n    axios\r\n        .get('/contacts')\r\n        .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n        .catch(error => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nexport const addContact = (name, number) => dispatch => {\r\n  const contact = { name, number };\r\n  dispatch(addContactRequest());\r\n\r\n    axios\r\n    .get('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch (error => dispatch(addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = contactId => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n    axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch (error => dispatch(deleteContactError(error)));\r\n};\r\n\r\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\nexport const getLoadingContacts = state => state.contacts.loading;\nexport const getError = state => state.contacts.error;\n\nexport const getContactsToShow = createSelector(\n  [getContacts, getFilter],\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return items.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  },\n);\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport PhoneInput from 'react-phone-number-input';\r\n\r\nimport { contactsOperations, getContacts } from 'redux/contacts';\r\n\r\nimport styles from './ContactForm.module.scss';\r\nimport 'react-phone-number-input/style.css';\r\n\r\nconst ContactForm = () => {\r\n  const [contactName, setContactName] = useState('');\r\n  const [contactNumber, setContactNumber] = useState('');\r\n\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    if (name === 'name') {\r\n      setContactName(value);\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const checkSameName = contacts.find(({ name }) => name === contactName);\r\n\r\n    const checkSameNumber = contacts.find(\r\n      ({ number }) => number === contactNumber,\r\n    );\r\n\r\n    if (checkSameNumber) {\r\n      const { name, number } = checkSameNumber;\r\n      alert(`This number already exists: \"${name}: ${number}\"`);\r\n      return;\r\n    }\r\n\r\n    if (checkSameName) {\r\n      alert(`${contactName} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    dispatch(contactsOperations.addContact(contactName, contactNumber));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setContactName('');\r\n    setContactNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={styles.ContactForm} onSubmit={handleFormSubmit}>\r\n      <label className={styles.formLabel}>\r\n        <span className={styles.formText}>Name</span>\r\n        <input\r\n          className={styles.formInput}\r\n          type=\"text\"\r\n          placeholder=\"Enter contact's name\"\r\n          name=\"name\"\r\n          value={contactName}\r\n          onChange={handleChange}\r\n          autoComplete=\"off\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className={styles.formLabel}>\r\n        <span className={styles.formText}>Number</span>\r\n        <PhoneInput\r\n          value={contactNumber}\r\n          onChange={setContactNumber}\r\n          defaultCountry=\"UA\"\r\n          international\r\n          autoComplete=\"off\"\r\n          pattern=\"((\\s*)?(\\+)?([- _():=+]?\\d[- _():=+]?){10,14}(\\s*)?)\"\r\n          title=\"Номер телефона должен состоять из 10-14 цифр, может содержать цифры и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <button className={styles.formBtn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;","import PropTypes from 'prop-types';\r\nimport styles from './Notification.module.scss';\r\n\r\nconst Notification = ({ message, type }) => {\r\n  const classNameType = type === 'error' ? styles.error : styles.notice;\r\n\r\n  return <p className={classNameType}>{message}</p>;\r\n};\r\n\r\nNotification.defaultProps = {\r\n  type: 'notice',\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n  type: PropTypes.string,\r\n};\r\n\r\nexport default Notification;","import PropTypes from \"prop-types\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { contactsOperations } from 'redux/contacts';\r\n\r\nimport styles from \"./ContactList.module.scss\";\r\n\r\nconst ContactItem = ({ contact }) => {\r\n  const { id, name, number } = contact;\r\n\r\n  const dispatch = useDispatch();\r\n  const onDeleteContact = () => dispatch(contactsOperations.deleteContact(id));\r\n\r\n  return (\r\n    <li className={styles.ContactItem}>\r\n      <span>\r\n        {name}:\r\n        <a\r\n          className={styles.phoneNumber}\r\n          href={\"tel:\" + number}\r\n          aria-label=\"Call\"\r\n        >\r\n          {number}\r\n        </a>\r\n      </span>\r\n      <button className={styles.contactBtn} onClick={onDeleteContact}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default ContactItem;","import { useSelector } from 'react-redux';\r\nimport { getContacts, getContactsToShow, } from 'redux/contacts/contacts-selectors';\r\nimport Notification from 'components/Notification/Notification';\r\nimport ContactItem from \"./ContactItem\";\r\nimport styles from \"./ContactList.module.scss\";\r\n\r\nconst ContactList = () => {\r\nconst allContacts = useSelector(getContacts);\r\n  const contacts = useSelector(getContactsToShow);\r\n\r\n  return allContacts.length === 0 ? (\r\n    <ul className={styles.ContactList}>\r\n      {contacts.map((contact) => {\r\n        const { id } = contact;\r\n\r\n        return <ContactItem key={id} contact={contact} />;\r\n      })}\r\n    </ul>\r\n  ) : (\r\n    <Notification message=\"Contact book is empty\" />\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from 'redux/contacts';\r\nimport * as contactsActions from 'redux/contacts';\r\nimport styles from \"./Filter.module.scss\";\r\n\r\nconst Filter = () => {\r\n\r\n  const filter = useSelector(getFilter);\r\n\r\n  const dispatch = useDispatch();\r\n  const onChangeFilter = e =>\r\n    dispatch(contactsActions.changeFilter(e.currentTarget.value));\r\n  \r\n  return (\r\n    <label className={styles.filterLabel}>\r\n      <span className={styles.filterText}>Find contacts by name</span>\r\n      <input\r\n        className={styles.filterInput}\r\n        type=\"text\"\r\n        placeholder=\"Enter contact's name\"\r\n        value={filter}\r\n        onChange={onChangeFilter}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;","import styles from \"./Container.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.Container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;","import styles from \"./App.scss\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport Container from \"./components/Container/Container\";\n\nconst App = () => (\n  <div className={styles.App}>\n    <Container>\n      <h1 className={styles.title}>Phonebook (hook)</h1>\n      <ContactForm />\n\n      <h2 className={styles.titleContacts}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  </div>\n);\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from './contacts-actions';\n\nconst itemsReducer = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filterReducer = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsError]: (_, { payload }) => payload,\n  [fetchContactsRequest]: () => null,\n  [addContactError]: (_, { payload }) => payload,\n  [addContactRequest]: () => null,\n  [deleteContactError]: (_, { payload }) => payload,\n  [deleteContactRequest]: () => null,\n});\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport contactsReducer from \"./contacts/contacts-reducer\";\nimport logger from \"redux-logger\";\n\nconst middleware = [...getDefaultMiddleware(), logger];\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\n\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__PVezi\",\"formInput\":\"ContactForm_formInput__2N1tc\",\"formBtn\":\"ContactForm_formBtn__3RIhc\",\"formLabel\":\"ContactForm_formLabel__2_0Rq\",\"formText\":\"ContactForm_formText__394pU\"};"],"sourceRoot":""}